Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DOUBLE_QUOTATION_MARK
    ELSE
    FOR
    FROM
    IMPL
    IN
    MATCH
    NOT
    QUOTATION_MARK
    RAND
    SELF
    STRUCT
    WHILE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> sentencias
Rule 2     programa -> sentencias programa
Rule 3     asignacion_variable -> LET IDENFTIFIER ASIG valor
Rule 4     asignacion_variable -> LET MUT ASIG valor
Rule 5     asignacion_variable -> LET IDENTIFIER COLON asignacion
Rule 6     asignacion_variable -> LET MUT IDENTIFIER COLON asignacion
Rule 7     declaracion_variable -> LET IDENTIFIER
Rule 8     declaracion_variable -> LET MUT IDENTIFIER
Rule 9     declaracion_variable -> LET IDENTIFIER COLON asig_data_type
Rule 10    declaracion_variable -> LET MUT IDENTIFIER COLON asig_data_type
Rule 11    asignacion -> string_asignacion
Rule 12    asignacion -> char_asignacion
Rule 13    asignacion -> numero_asignacion
Rule 14    asignacion -> boolean_asignacion
Rule 15    asignacion -> lista_asignacion
Rule 16    asignacion -> tupla_asignacion
Rule 17    string_asignacion -> REFERENCE STR ASIG STRING
Rule 18    char_asignacion -> CHAR ASIG CHARACTER
Rule 19    numero_asignacion -> signed_integer ASIG INTEGER
Rule 20    numero_asignacion -> signed_integer ASIG MINUS INTEGER
Rule 21    numero_asignacion -> unsigned_integer ASIG INTEGER
Rule 22    numero_asignacion -> float_type ASIG FLOAT
Rule 23    numero_asignacion -> float_type ASIG MINUS FLOAT
Rule 24    boolean_asignacion -> BOOL ASIG TRUE
Rule 25    boolean_asignacion -> BOOL ASIG FALSE
Rule 26    lista_asignacion -> list_type ASIG arreglos
Rule 27    tupla_asignacion -> tupla_type ASIG tuplas
Rule 28    comparacion -> valor EQ valor
Rule 29    comparacion -> valor NEQ valor
Rule 30    comparacion -> valor GEQ valor
Rule 31    comparacion -> valor LEQ valor
Rule 32    comparacion -> valor RIGHTARROW valor
Rule 33    comparacion -> valor LEFTARROW valor
Rule 34    valor -> INTEGER
Rule 35    valor -> FLOAT
Rule 36    valor -> IDENTIFIER
Rule 37    valor -> operacion
Rule 38    valor -> indexacion
Rule 39    valor -> arreglos
Rule 40    valor -> STRING
Rule 41    valor -> booleanos
Rule 42    booleanos -> TRUE
Rule 43    booleanos -> FALSE
Rule 44    vacio -> <empty>
Rule 45    sentencias -> asignacion_variable SEMICOLON
Rule 46    sentencias -> declaracion_variable SEMICOLON
Rule 47    sentencias -> impresion SEMICOLON
Rule 48    sentencias -> funcion
Rule 49    sentencias -> ingreso_datos SEMICOLON
Rule 50    sentencias -> arreglos SEMICOLON
Rule 51    sentencias -> control_structure
Rule 52    sentencias -> llamada SEMICOLON
Rule 53    impresion -> PRINTLN EXCLAMATION LPAREN valor RPAREN
Rule 54    impresion -> PRINTLN EXCLAMATION LPAREN valor COMMA valores RPAREN
Rule 55    funcion -> FN IDENTIFIER LPAREN parameters RPAREN LLLAVE programa RLLAVE
Rule 56    funcion -> FN MAIN LPAREN parameters RPAREN LLLAVE programa RLLAVE
Rule 57    funcion -> FN MAIN LPAREN RPAREN LLLAVE programa RLLAVE
Rule 58    funcion -> FN IDENTIFIER LPAREN RPAREN LLLAVE programa RLLAVE
Rule 59    funcion -> FN IDENTIFIER LPAREN parameters RPAREN MINUS RIGHTARROW data_type LLLAVE programa retorno RLLAVE
Rule 60    funcion -> FN IDENTIFIER LPAREN RPAREN MINUS RIGHTARROW data_type LLLAVE programa retorno RLLAVE
Rule 61    retorno -> RETURN valor SEMICOLON
Rule 62    parameters -> IDENTIFIER COLON asig_data_type
Rule 63    parameters -> IDENTIFIER COLON asig_data_type COMMA parameters
Rule 64    parameters -> vacio
Rule 65    ingreso_datos -> STD DOUBLE_COLON IO DOUBLE_COLON DOT STDIN LPAREN RPAREN DOT READLINE LPAREN REFERENCE MUT IDENTIFIER RPAREN
Rule 66    asig_data_type -> data_type
Rule 67    asig_data_type -> list_type
Rule 68    asig_data_type -> tuple_type
Rule 69    list_type -> LCORCH some_data_type RCORCH
Rule 70    tuple_type -> LPAREN some_data_type RPAREN
Rule 71    data_type -> CHAR
Rule 72    data_type -> REFERENCE STR
Rule 73    data_type -> signed_integer
Rule 74    data_type -> unsigned_integer
Rule 75    data_type -> float_type
Rule 76    data_type -> BOOL
Rule 77    signed_integer -> I8
Rule 78    signed_integer -> I16
Rule 79    signed_integer -> I32
Rule 80    signed_integer -> I64
Rule 81    signed_integer -> I128
Rule 82    signed_integer -> ISIZE
Rule 83    unsigned_integer -> U8
Rule 84    unsigned_integer -> U16
Rule 85    unsigned_integer -> U32
Rule 86    unsigned_integer -> U64
Rule 87    unsigned_integer -> U128
Rule 88    unsigned_integer -> USIZE
Rule 89    float_type -> F32
Rule 90    float_type -> F64
Rule 91    some_data_type -> data_type
Rule 92    some_data_type -> data_type COMMA some_data_type
Rule 93    control_structure -> condicional
Rule 94    arreglos -> LCORCH valores RCORCH
Rule 95    tuplas -> LPAREN valores RPAREN
Rule 96    valores -> valor
Rule 97    valores -> valor COMMA valores
Rule 98    conector -> AND
Rule 99    conector -> OR
Rule 100   proposicion -> comparacion conector proposicion
Rule 101   proposicion -> comparacion
Rule 102   condicional -> IF comparacion LLLAVE programa RLLAVE
Rule 103   condicional -> IF proposicion LLLAVE programa RLLAVE
Rule 104   numeric -> INTEGER
Rule 105   numeric -> FLOAT
Rule 106   numeric -> IDENTIFIER
Rule 107   cadena -> STRING
Rule 108   cadena -> IDENTIFIER
Rule 109   operacion -> numeric PLUS numeric
Rule 110   operacion -> numeric MINUS numeric
Rule 111   operacion -> numeric TIMES numeric
Rule 112   operacion -> numeric DIVIDE numeric
Rule 113   operacion -> numeric MOD numeric
Rule 114   operacion -> numeric INTD numeric
Rule 115   operacion -> cadena PLUS cadena
Rule 116   indexacion -> IDENTIFIER LCORCH INTEGER RCORCH
Rule 117   llamada -> IDENTIFIER LPAREN valores RPAREN
Rule 118   main -> FN MAIN LPAREN RPAREN LLLAVE programa RLLAVE

Terminals, with rules where they appear

AND                  : 98
ASIG                 : 3 4 17 18 19 20 21 22 23 24 25 26 27
BOOL                 : 24 25 76
CHAR                 : 18 71
CHARACTER            : 18
COLON                : 5 6 9 10 62 63
COMMA                : 54 63 92 97
DIVIDE               : 112
DOT                  : 65 65
DOUBLE_COLON         : 65 65
DOUBLE_QUOTATION_MARK : 
ELSE                 : 
EQ                   : 28
EXCLAMATION          : 53 54
F32                  : 89
F64                  : 90
FALSE                : 25 43
FLOAT                : 22 23 35 105
FN                   : 55 56 57 58 59 60 118
FOR                  : 
FROM                 : 
GEQ                  : 30
I128                 : 81
I16                  : 78
I32                  : 79
I64                  : 80
I8                   : 77
IDENTIFIER           : 5 6 7 8 9 10 36 55 58 59 60 62 63 65 106 108 116 117
IF                   : 102 103
IMPL                 : 
IN                   : 
INTD                 : 114
INTEGER              : 19 20 21 34 104 116
IO                   : 65
ISIZE                : 82
LCORCH               : 69 94 116
LEFTARROW            : 33
LEQ                  : 31
LET                  : 3 4 5 6 7 8 9 10
LLLAVE               : 55 56 57 58 59 60 102 103 118
LPAREN               : 53 54 55 56 57 58 59 60 65 65 70 95 117 118
MAIN                 : 56 57 118
MATCH                : 
MINUS                : 20 23 59 60 110
MOD                  : 113
MUT                  : 4 6 8 10 65
NEQ                  : 29
NOT                  : 
OR                   : 99
PLUS                 : 109 115
PRINTLN              : 53 54
QUOTATION_MARK       : 
RAND                 : 
RCORCH               : 69 94 116
READLINE             : 65
REFERENCE            : 17 65 72
RETURN               : 61
RIGHTARROW           : 32 59 60
RLLAVE               : 55 56 57 58 59 60 102 103 118
RPAREN               : 53 54 55 56 57 58 59 60 65 65 70 95 117 118
SELF                 : 
SEMICOLON            : 45 46 47 49 50 52 61
STD                  : 65
STDIN                : 65
STR                  : 17 72
STRING               : 17 40 107
STRUCT               : 
TIMES                : 111
TRUE                 : 24 42
U128                 : 87
U16                  : 84
U32                  : 85
U64                  : 86
U8                   : 83
USIZE                : 88
WHILE                : 
error                : 

Nonterminals, with rules where they appear

IDENFTIFIER          : 3
arreglos             : 26 39 50
asig_data_type       : 9 10 62 63
asignacion           : 5 6
asignacion_variable  : 45
boolean_asignacion   : 14
booleanos            : 41
cadena               : 115 115
char_asignacion      : 12
comparacion          : 100 101 102
condicional          : 93
conector             : 100
control_structure    : 51
data_type            : 59 60 66 91 92
declaracion_variable : 46
float_type           : 22 23 75
funcion              : 48
impresion            : 47
indexacion           : 38
ingreso_datos        : 49
list_type            : 26 67
lista_asignacion     : 15
llamada              : 52
main                 : 
numeric              : 109 109 110 110 111 111 112 112 113 113 114 114
numero_asignacion    : 13
operacion            : 37
parameters           : 55 56 59 63
programa             : 2 55 56 57 58 59 60 102 103 118 0
proposicion          : 100 103
retorno              : 59 60
sentencias           : 1 2
signed_integer       : 19 20 73
some_data_type       : 69 70 92
string_asignacion    : 11
tupla_asignacion     : 16
tupla_type           : 27
tuplas               : 27
tuple_type           : 68
unsigned_integer     : 21 74
vacio                : 64
valor                : 3 4 28 28 29 29 30 30 31 31 32 32 33 33 53 54 61 96 97
valores              : 54 94 95 97 117

